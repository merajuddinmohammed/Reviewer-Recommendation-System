# ============================================================================
# Backend Requirements - Reviewer Recommendation System
# ============================================================================
# Compatible with Windows + CUDA 11.8 (for local development)
# Production deployment uses CPU-only versions (see Dockerfile)
# Python 3.11+
# ============================================================================

# Core Web Framework
fastapi==0.120.2
uvicorn==0.38.0
python-multipart==0.0.12  # For file uploads

# Data Processing
numpy==2.3.4
pandas==2.3.3
scipy==1.16.3

# Machine Learning - Core
scikit-learn==1.7.2
lightgbm==4.6.0
joblib==1.3.2

# Vector Search (CPU version for production)
faiss-cpu==1.12.0

# NLP & Embeddings (CPU version for production)
sentence-transformers==5.1.2
transformers==4.57.1
torch>=2.0.0
tokenizers==0.21.0
huggingface-hub==0.27.1

# PDF Processing
pdfplumber==0.11.7
PyPDF2==3.0.1

# Data Validation
pydantic==2.12.3
pydantic-core==2.41.4

# Utilities
tqdm==4.67.1

# Optional Topic Modeling (BERTopic)
# bertopic==0.16.0
# umap-learn==0.5.4
# hdbscan==0.8.33

# ============================================================================
# Development Dependencies (not needed in production)
# ============================================================================
# pytest==8.3.4
# pytest-asyncio==0.23.8
# httpx==0.27.0  # For testing FastAPI

# ============================================================================
# Notes:
# ============================================================================
# 1. For GPU support in local development:
#    - Uninstall faiss-cpu: pip uninstall faiss-cpu
#    - Install faiss-gpu: pip install faiss-gpu
#    - Ensure CUDA 11.8 is installed
#
# 2. For production (CPU-only):
#    - Use faiss-cpu (already in this list)
#    - torch will use CPU by default
#    - sentence-transformers will use CPU
#
# 3. Embeddings are prebuilt at deploy time, so GPU is not needed at runtime
#    - FAISS index: data/faiss_index.faiss
#    - TF-IDF model: models/tfidf_vectorizer.pkl
#    - LightGBM model: models/lgbm_ranker.pkl
#
# 4. For Windows + CUDA 11.8 development:
#    pip install torch==2.9.0+cu118 -f https://download.pytorch.org/whl/torch_stable.html
#
# 5. Installation order matters:
#    - Install numpy first
#    - Then scipy
#    - Then scikit-learn
#    - Then other packages
# ============================================================================
