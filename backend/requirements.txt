# ============================================================================
# Backend Requirements - Reviewer Recommendation System
# ============================================================================
# Compatible with Windows + CUDA 11.8 (for local development)
# Production deployment uses CPU-only versions (see Dockerfile)
# Python 3.11+
# ============================================================================

# Core Web Framework
fastapi>=0.100.0
uvicorn>=0.20.0
python-multipart>=0.0.9  # For file uploads

# Data Processing
numpy>=1.24.0,<3.0.0
pandas>=2.0.0
scipy>=1.10.0

# Machine Learning - Core
scikit-learn>=1.3.0
lightgbm>=4.0.0
joblib>=1.3.0

# Vector Search (CPU version for production)
faiss-cpu>=1.7.4

# NLP & Embeddings (CPU version for production)
sentence-transformers>=3.0.0
transformers>=4.30.0
torch>=2.0.0
tokenizers>=0.13.0
huggingface-hub>=0.20.0

# PDF Processing
pdfplumber>=0.10.0
PyPDF2>=3.0.0

# Data Validation
pydantic>=2.0.0
pydantic-core>=2.0.0

# Utilities
tqdm>=4.65.0

# Optional Topic Modeling (BERTopic)
# bertopic==0.16.0
# umap-learn==0.5.4
# hdbscan==0.8.33

# ============================================================================
# Development Dependencies (not needed in production)
# ============================================================================
# pytest==8.3.4
# pytest-asyncio==0.23.8
# httpx==0.27.0  # For testing FastAPI

# ============================================================================
# Notes:
# ============================================================================
# 1. For GPU support in local development:
#    - Uninstall faiss-cpu: pip uninstall faiss-cpu
#    - Install faiss-gpu: pip install faiss-gpu
#    - Ensure CUDA 11.8 is installed
#
# 2. For production (CPU-only):
#    - Use faiss-cpu (already in this list)
#    - torch will use CPU by default
#    - sentence-transformers will use CPU
#
# 3. Embeddings are prebuilt at deploy time, so GPU is not needed at runtime
#    - FAISS index: data/faiss_index.faiss
#    - TF-IDF model: models/tfidf_vectorizer.pkl
#    - LightGBM model: models/lgbm_ranker.pkl
#
# 4. For Windows + CUDA 11.8 development:
#    pip install torch==2.9.0+cu118 -f https://download.pytorch.org/whl/torch_stable.html
#
# 5. Installation order matters:
#    - Install numpy first
#    - Then scipy
#    - Then scikit-learn
#    - Then other packages
# ============================================================================
